{"version":3,"sources":["logo.svg","components/EmployeeTable.js","components/Header.js","utils/API.js","App.js","reportWebVitals.js","index.js"],"names":["EmployeeTable","columns","data","searchTerm","useState","filteredData","setFilteredData","key","field","direction","sortColumn","setSortColumn","useEffect","sort","filter","a","b","aValue","_","get","bValue","value","filteredValues","item","Math","max","map","column","toLowerCase","indexOf","tableHeader","TableHead","TableRow","TableCell","onClick","e","header","TableContainer","component","Paper","Table","TableBody","row","login","uuid","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","Header","props","classes","className","AppBar","Toolbar","Typography","variant","noWrap","InputBase","placeholder","input","inputProps","onChange","currentTarget","getUsers","results","axios","App","setData","setSearchTerm","API","Container","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c9627b0a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useEffect, useState } from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\r\nimport { Paper } from '@material-ui/core';\r\nimport _ from 'lodash';\r\n\r\nexport default function EmployeeTable({columns, data, searchTerm, ...props}) {\r\n\r\n    const [filteredData, setFilteredData] = useState([...data]);\r\n    const [sortColumn, setSortColumn] = useState({key: columns[0].field, direction: 'ASC'});\r\n\r\n    useEffect(() => {\r\n        sort('*');\r\n    }, [data]);\r\n\r\n    useEffect(() => {\r\n        filter(searchTerm);\r\n    }, [searchTerm]);\r\n    \r\n    const sort = (key = sortColumn.key, direction = sortColumn.direction) => {\r\n        setSortColumn({key, direction});\r\n        setFilteredData((key === '*' ? data : filteredData).sort((a, b) => {\r\n            let aValue = _.get(a, key);\r\n            let bValue = _.get(b, key);\r\n\r\n            if(direction === 'ASC')\r\n            {\r\n                if(aValue > bValue)\r\n                    return 1;\r\n                if(aValue < bValue)\r\n                    return -1;\r\n                return 0;\r\n            } else {\r\n                if(aValue < bValue)\r\n                    return 1;\r\n                if(aValue > bValue)\r\n                    return -1;\r\n                return 0;\r\n            }\r\n        }));\r\n    };\r\n\r\n    const filter = (value) => {\r\n        sort();\r\n        if(!value)\r\n        {\r\n            return setFilteredData(data);\r\n        }\r\n        let filteredValues = data.filter((item) => {\r\n\r\n            let maxIndexOf = Math.max(...columns.map(column => {\r\n                return _.get(item, column.field).toLowerCase().indexOf(value.toLowerCase());\r\n            }));\r\n            return maxIndexOf > -1;\r\n        });\r\n        setFilteredData(filteredValues);\r\n    };\r\n\r\n\r\n    let tableHeader = <TableHead>\r\n        <TableRow>\r\n            {columns.map(column => \r\n                <TableCell \r\n                    key={column.field} \r\n                    onClick={e => {\r\n                        sort(column.field, (sortColumn.key === column.field && sortColumn.direction === 'ASC') ? 'DESC' : 'ASC');\r\n                    }}\r\n                >\r\n                    {column.header}\r\n                    {column.field === sortColumn.key ? sortColumn.direction === 'ASC' ? <ArrowDropDownIcon/> : <ArrowDropUpIcon/> : ''}\r\n                </TableCell>\r\n            )}\r\n        </TableRow>\r\n    </TableHead>;\r\n\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <Table>\r\n                {tableHeader}\r\n                <TableBody>\r\n                    {\r\n                        filteredData.map(row => \r\n                            <TableRow key={row.login.uuid}>\r\n                                {\r\n                                    columns.map(column => \r\n                                        <TableCell>\r\n                                            {_.get(row, column.field)}\r\n                                        </TableCell>\r\n                                    )\r\n                                }\r\n                            </TableRow>\r\n                        )\r\n                    }\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    );\r\n}","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: '12ch',\r\n      '&:focus': {\r\n        width: '20ch',\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function Header(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            Employees\r\n          </Typography>\r\n          <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"Search…\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ 'aria-label': 'search' }}\r\n              onChange={(e) => props.search(e.currentTarget.value)}\r\n            />\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\n\r\nexport default {\r\n  getUsers: async function(results) {\r\n    return await axios.get('https://randomuser.me/api/' + (results ? `?results=${results}` : ''));\r\n  }\r\n};\r\n","import logo from './logo.svg';\nimport './App.css';\nimport EmployeeTable from './components/EmployeeTable';\nimport Header from './components/Header';\nimport API from './utils/API';\nimport { useEffect, useState } from 'react';\nimport { Container } from '@material-ui/core';\nimport _ from 'lodash';\n\nfunction App() {\n  const [data, setData] = useState([]);\n  let columns = [\n    {field: 'name.first', header: 'First Name'},\n    {field: 'name.last', header: 'Last Name'},\n    {field: 'gender', header: 'Gender'},\n    {field: 'login.username', header: 'Username'},\n    {field: 'email', header: 'Email'},\n    {field: 'phone', header: 'Phone Number'},\n  ];\n  const [searchTerm, setSearchTerm] = useState('');\n\n  useEffect(async () => {\n    setData(await (await API.getUsers(30)).data.results)\n  }, []);\n\n  return (\n    <Container>\n      <Header search={setSearchTerm}/>\n      <EmployeeTable columns={columns} data={data} searchTerm={searchTerm}/>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}